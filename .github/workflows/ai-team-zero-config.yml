name: AI Team Zero-Config
on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      task_description:
        description: 'Describe what you want AI Team to build'
        required: true
        default: 'Create a modern landing page'

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  ai-team-orchestrator:
    runs-on: ubuntu-latest
    name: 🤖 AI Team Orchestrator
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Setup Git identity
        run: |
          git config --global user.name "AI Team Bot"
          git config --global user.email "ai-team@github-actions.local"
          
      - name: 🔍 Analyze Task
        id: analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_TITLE: ${{ github.event.issue.title || github.event.inputs.task_description }}
          ISSUE_BODY: ${{ github.event.issue.body || 'Manual task execution' }}
          COMMENT_BODY: ${{ github.event.comment.body || '' }}
          MANUAL_TASK: ${{ github.event.inputs.task_description || '' }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          ACTION: analyze
        run: |
          chmod +x .github/scripts/zero_config_generator.py
          python3 .github/scripts/zero_config_generator.py
          
      - name: 🚀 Generate Code
        id: generate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TASK: ${{ steps.analyze.outputs.task }}
          TASK_TYPE: ${{ steps.analyze.outputs.task_type }}
          AGENT: ${{ steps.analyze.outputs.agent }}
          ACTION: generate
        run: |
          python3 .github/scripts/zero_config_generator.py
          
      - name: 📝 Apply Changes
        id: apply
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTION: apply
        run: |
          python3 .github/scripts/zero_config_generator.py
          
      - name: 🌿 Create Branch and Commit
        id: create_pr
        if: steps.apply.outputs.changes_made == 'true'
        run: |
          # Créer un nom de branche unique
          BRANCH_NAME="ai-team/issue-${{ github.event.issue.number || 'manual' }}-$(date +%s)"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          
          # Créer et switch vers la nouvelle branche
          git checkout -b $BRANCH_NAME
          
          # Ajouter les fichiers générés
          git add -A
          
          # Commiter les changements
          git commit -m "🤖 AI Team: ${{ steps.analyze.outputs.task_summary }}
          
          Generated by: ${{ steps.analyze.outputs.agent }}
          Files created: ${{ steps.apply.outputs.files_created }}
          
          Auto-generated from issue #${{ github.event.issue.number || 'manual-task' }}"
          
          # Pousser la branche
          git push origin $BRANCH_NAME
          
      - name: 🔄 Create Pull Request
        if: steps.apply.outputs.changes_made == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🤖 AI Team: ${{ steps.analyze.outputs.task_summary }}',
              head: '${{ steps.create_pr.outputs.branch_name }}',
              base: context.ref.replace('refs/heads/', ''),
              body: `## 🤖 Pull Request générée par AI Team
              
              **Agent:** ${{ steps.analyze.outputs.agent }}
              **Issue:** #${{ github.event.issue.number || 'N/A' }}
              
              ### 📝 Description
              ${{ steps.analyze.outputs.task_summary }}
              
              ### 📁 Fichiers créés
              ${{ steps.apply.outputs.files_created }}
              
              ### ✅ Tests automatiques
              - [ ] Code généré avec succès
              - [ ] Fichiers créés correctement
              - [ ] Prêt pour review
              
              ---
              *Cette PR a été créée automatiquement par AI Team Orchestrator*
              
              Closes #${{ github.event.issue.number }}`
            });
            
            console.log(`Pull Request créée: ${pr.data.html_url}`);
            
            // Ajouter l'URL de la PR en output
            if (context.payload.issue) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: `## 🎉 Pull Request créée !
                
                La PR a été créée avec succès : ${pr.data.html_url}
                
                Vous pouvez maintenant:
                1. Reviewer le code généré
                2. Tester les modifications
                3. Merger la PR si tout est correct
                
                ---
                *AI Team Orchestrator*`
              });
            }
            
      - name: 💬 Comment on Issue
        if: (github.event_name == 'issues' || github.event_name == 'issue_comment') && steps.apply.outputs.changes_made != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const agent = '${{ steps.analyze.outputs.agent }}';
            const taskSummary = '${{ steps.analyze.outputs.task_summary }}';
            const filesCreated = '${{ steps.apply.outputs.files_created }}';
            const changesMade = '${{ steps.apply.outputs.changes_made }}';
            
            let comment = `## 🤖 AI Team a traité votre demande
            
            **Agent assigné:** ${agent}
            **Tâche:** ${taskSummary}
            
            `;
            
            if (changesMade === 'true') {
              comment += `✅ **Code généré avec succès!**
              
              📁 **Fichiers créés:** ${filesCreated}
              
              💡 Le code a été généré automatiquement. Vous pouvez le consulter dans les fichiers créés.
              
              `;
            } else {
              comment += `⚠️ **Aucun fichier généré**
              
              L'agent a analysé la tâche mais n'a pas créé de nouveaux fichiers.
              
              `;
            }
            
            comment += `---
            *Généré automatiquement par AI Team Orchestrator v1.2.5*`;
            
            if (context.payload.issue) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: comment
              });
            }
            
      - name: 🎉 Success Notification
        run: |
          echo "🤖 AI Team has successfully processed the task!"
          echo "Agent: ${{ steps.analyze.outputs.agent }}"
          echo "Task: ${{ steps.analyze.outputs.task_summary }}"
          if [ "${{ steps.apply.outputs.changes_made }}" = "true" ]; then
            echo "Files created: ${{ steps.apply.outputs.files_created }}"
          fi 