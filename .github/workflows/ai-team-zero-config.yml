name: AI Team Zero-Config
on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      task_description:
        description: 'Describe what you want AI Team to build'
        required: true
        default: 'Create a modern landing page'

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  ai-team-orchestrator:
    runs-on: ubuntu-latest
    name: ü§ñ AI Team Orchestrator
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Setup Git identity
        run: |
          git config --global user.name "AI Team Bot"
          git config --global user.email "ai-team@github-actions.local"
          
      - name: üîç Analyze Task
        id: analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_TITLE: ${{ github.event.issue.title || github.event.inputs.task_description }}
          ISSUE_BODY: ${{ github.event.issue.body || 'Manual task execution' }}
          COMMENT_BODY: ${{ github.event.comment.body || '' }}
          MANUAL_TASK: ${{ github.event.inputs.task_description || '' }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          ACTION: analyze
        run: |
          chmod +x .github/scripts/zero_config_generator.py
          python3 .github/scripts/zero_config_generator.py
          
      - name: üöÄ Generate Code
        id: generate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TASK: ${{ steps.analyze.outputs.task }}
          TASK_TYPE: ${{ steps.analyze.outputs.task_type }}
          AGENT: ${{ steps.analyze.outputs.agent }}
          ACTION: generate
        run: |
          python3 .github/scripts/zero_config_generator.py
          
      - name: üìù Apply Changes
        id: apply
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTION: apply
        run: |
          python3 .github/scripts/zero_config_generator.py
          
      - name: üí¨ Comment on Issue
        if: github.event_name == 'issues' || github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const agent = '${{ steps.analyze.outputs.agent }}';
            const taskSummary = '${{ steps.analyze.outputs.task_summary }}';
            const filesCreated = '${{ steps.apply.outputs.files_created }}';
            const changesMade = '${{ steps.apply.outputs.changes_made }}';
            
            let comment = `## ü§ñ AI Team a trait√© votre demande
            
            **Agent assign√©:** ${agent}
            **T√¢che:** ${taskSummary}
            
            `;
            
            if (changesMade === 'true') {
              comment += `‚úÖ **Code g√©n√©r√© avec succ√®s!**
              
              üìÅ **Fichiers cr√©√©s:** ${filesCreated}
              
              üí° Le code a √©t√© g√©n√©r√© automatiquement. Vous pouvez le consulter dans les fichiers cr√©√©s.
              
              `;
            } else {
              comment += `‚ö†Ô∏è **Aucun fichier g√©n√©r√©**
              
              L'agent a analys√© la t√¢che mais n'a pas cr√©√© de nouveaux fichiers.
              
              `;
            }
            
            comment += `---
            *G√©n√©r√© automatiquement par AI Team Orchestrator v1.2.5*`;
            
            if (context.payload.issue) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: comment
              });
            }
            
      - name: üéâ Success Notification
        run: |
          echo "ü§ñ AI Team has successfully processed the task!"
          echo "Agent: ${{ steps.analyze.outputs.agent }}"
          echo "Task: ${{ steps.analyze.outputs.task_summary }}"
          if [ "${{ steps.apply.outputs.changes_made }}" = "true" ]; then
            echo "Files created: ${{ steps.apply.outputs.files_created }}"
          fi 