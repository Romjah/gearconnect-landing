name: AI Team Together.ai
on:
  issues:
    types: [opened, edited]
  workflow_dispatch:
    inputs:
      task_description:
        description: 'Describe what you want AI Team to build'
        required: true
        default: 'Create a modern landing page'

permissions:
  contents: write
  pull-requests: write
  issues: write
  actions: read
  checks: write
  statuses: write

jobs:
  ai-team-together:
    runs-on: ubuntu-latest
    name: ü§ñ AI Team Together.ai
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Setup Git
        run: |
          git config --global user.name "AI Team Together.ai"
          git config --global user.email "ai-team-together@github-actions.local"
          
      - name: ü§ñ Run AI Team Together.ai
        id: ai_team
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TOGETHER_AI_API_KEY: ${{ secrets.TOGETHER_AI_API_KEY }}
          ISSUE_TITLE: ${{ github.event.issue.title || github.event.inputs.task_description }}
          ISSUE_BODY: ${{ github.event.issue.body || 'Create modern code' }}
        run: |
          # Install Python dependencies
          pip install requests python-dotenv typing-extensions
          
          chmod +x .github/scripts/ai_team_mcp.py
          python3 .github/scripts/ai_team_mcp.py
          
      - name: üåø Create Branch and Push
        if: steps.ai_team.outputs.changes_made == 'true'
        run: |
          BRANCH_NAME="${{ steps.ai_team.outputs.branch_name }}"
          git checkout -b $BRANCH_NAME
          git add -A
          git commit -m "ü§ñ ${{ steps.ai_team.outputs.agent }}: ${{ steps.ai_team.outputs.task_summary }}"
          git push origin $BRANCH_NAME
          
      - name: üîÑ Create Pull Request
        if: steps.ai_team.outputs.changes_made == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME="${{ steps.ai_team.outputs.branch_name }}"
          AGENT="${{ steps.ai_team.outputs.agent }}"
          SUMMARY="${{ steps.ai_team.outputs.task_summary }}"
          FILES="${{ steps.ai_team.outputs.files_created }}"
          ISSUE_NUM="${{ github.event.issue.number }}"
          
          PR_TITLE="ü§ñ $AGENT: $SUMMARY"
          
          echo "ü§ñ Pull Request g√©n√©r√©e par AI Team Together.ai" > pr_body.txt
          echo "" >> pr_body.txt
          echo "Agent IA: $AGENT" >> pr_body.txt
          if [ -n "$ISSUE_NUM" ]; then
            echo "Issue: #$ISSUE_NUM" >> pr_body.txt
          else
            echo "Issue: Manual task" >> pr_body.txt
          fi
          echo "" >> pr_body.txt
          echo "Description: $SUMMARY" >> pr_body.txt
          echo "Fichiers cr√©√©s: $FILES" >> pr_body.txt
          echo "" >> pr_body.txt
          echo "Technologie: Together.ai + AI Team Orchestrator" >> pr_body.txt
          echo "" >> pr_body.txt
          echo "Cr√©√©e automatiquement par AI Team Orchestrator + Together.ai" >> pr_body.txt
          
          if [ -n "$ISSUE_NUM" ]; then
            echo "" >> pr_body.txt
            echo "Closes #$ISSUE_NUM" >> pr_body.txt
          fi
          
          gh pr create --title "$PR_TITLE" --body-file pr_body.txt --head "$BRANCH_NAME" --base main
          rm pr_body.txt
          
      - name: üí¨ Comment Success
        if: steps.ai_team.outputs.changes_made == 'true' && github.event.issue.number
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const agent = '${{ steps.ai_team.outputs.agent }}';
            const branchName = '${{ steps.ai_team.outputs.branch_name }}';
            
            let commentBody = 'üéâ Pull Request cr√©√©e avec Together.ai !\n\n';
            commentBody += 'Agent utilis√©: ' + agent + '\n';
            commentBody += 'Branche: ' + branchName + '\n\n';
            commentBody += 'Prochaines √©tapes:\n';
            commentBody += '1. Review le code g√©n√©r√© dans la PR\n';
            commentBody += '2. Tester les fonctionnalit√©s\n';
            commentBody += '3. Merger la PR si approuv√©\n\n';
            commentBody += 'AI Team Orchestrator v1.3.0 + Together.ai';

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
            
      - name: üí¨ Comment No Changes
        if: steps.ai_team.outputs.changes_made != 'true' && github.event.issue.number
        uses: actions/github-script@v7
        with:
          script: |
            let commentBody = '## ü§ñ AI Team MCP a analys√© votre demande\n\n';
            commentBody += '**Agent assign√©:** ${{ steps.ai_team.outputs.agent }}\n';
            commentBody += '**T√¢che:** ${{ steps.ai_team.outputs.task_summary }}\n\n';
            commentBody += '‚ö†Ô∏è **Aucun fichier g√©n√©r√©**\n\n';
            commentBody += 'L\'agent a analys√© mais n\'a pas cr√©√© de fichiers.\n\n';
            commentBody += 'üí° **Suggestions:**\n';
            commentBody += '- Reformulez de mani√®re plus sp√©cifique\n';
            commentBody += '- Pr√©cisez le type de code souhait√©\n';
            commentBody += '- Ajoutez des d√©tails techniques\n\n';
            commentBody += '---\n';
            commentBody += '*AI Team Orchestrator v1.3.0 avec Together.ai*';

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: commentBody
            });
            
      - name: üéâ Summary
        run: |
          echo "ü§ñ AI Team Together.ai completed!"
          echo "Agent: ${{ steps.ai_team.outputs.agent }}"
          echo "Task: ${{ steps.ai_team.outputs.task_summary }}"
          echo "Changes: ${{ steps.ai_team.outputs.changes_made }}" 